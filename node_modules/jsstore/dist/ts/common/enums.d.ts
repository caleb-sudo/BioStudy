export declare const ERROR_TYPE: {
    InvalidUpdateColumn: string;
    UndefinedColumn: string;
    UndefinedValue: string;
    UndefinedColumnName: string;
    UndefinedDbName: string;
    UndefinedColumnValue: string;
    NotArray: string;
    NoValueSupplied: string;
    ColumnNotExist: string;
    NoIndexFound: string;
    InvalidOp: string;
    NullValue: string;
    WrongDataType: string;
    TableNotExist: string;
    DbNotExist: string;
    ConnectionAborted: string;
    ConnectionClosed: string;
    NotObject: string;
    InvalidConfig: string;
    DbBlocked: string;
    IndexedDbNotSupported: string;
    NullValueInWhere: string;
    InvalidJoinQuery: string;
    InvalidQuery: string;
    ImportScriptsFailed: string;
    MethodNotExist: string;
    Unknown: string;
    InvalidMiddleware: string;
    InvalidOrderQuery: string;
    InvalidGroupQuery: string;
    NoPrimaryKey: string;
};
export declare enum WORKER_STATUS {
    Registered = "registerd",
    Failed = "failed",
    NotStarted = "not_started"
}
export declare enum DATA_TYPE {
    String = "string",
    Object = "object",
    Array = "array",
    Number = "number",
    Boolean = "boolean",
    Null = "null",
    DateTime = "date_time"
}
export declare enum API {
    InitDb = "init_db",
    MapGet = "map_get",
    MapSet = "map_set",
    MapHas = "map_has",
    MapDelete = "map_delete",
    Select = "select",
    Insert = "insert",
    Update = "update",
    Remove = "remove",
    OpenDb = "open_db",
    Clear = "clear",
    DropDb = "drop_db",
    Count = "count",
    ChangeLogStatus = "change_log_status",
    Terminate = "terminate",
    Transaction = "transaction",
    CloseDb = "close_db",
    Union = "union",
    Intersect = "intersect",
    ImportScripts = "import_scripts",
    Middleware = "middleware"
}
export declare enum EVENT {
    RequestQueueEmpty = "requestQueueEmpty",
    RequestQueueFilled = "requestQueueFilled",
    Upgrade = "upgrade",
    Create = "create",
    Open = "open"
}
export declare enum QUERY_OPTION {
    Where = "where",
    Like = "like",
    Regex = "regex",
    In = "in",
    Equal = "=",
    Between = "-",
    GreaterThan = ">",
    LessThan = "<",
    GreaterThanEqualTo = ">=",
    LessThanEqualTo = "<=",
    NotEqualTo = "!=",
    Aggregate = "aggregate",
    Max = "max",
    Min = "min",
    Avg = "avg",
    Count = "count",
    Sum = "sum",
    List = "list",
    Or = "or",
    Skip = "skip",
    Limit = "limit",
    And = "and",
    IgnoreCase = "ignoreCase",
    Then = "then"
}
export declare enum IDB_MODE {
    ReadOnly = "readonly",
    ReadWrite = "readwrite"
}
export declare enum OCCURENCE {
    First = "f",
    Last = "l",
    Any = "a"
}
export declare enum CONNECTION_STATUS {
    Connected = "connected",
    Closed = "closed",
    NotStarted = "not_started",
    UnableToStart = "unable_to_start",
    ClosedByJsStore = "closed_by_jsstore"
}
